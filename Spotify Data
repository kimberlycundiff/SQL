# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#What is the average track danceability?

SELECT SUM(danceability)/COUNT(track_name) AS avg_track_danceability
FROM BIT_DB.Spotifydata;

#Who are the top 10 most popular artists?

SELECT artist_name, AVG(popularity) AS popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity desc
LIMIT 10;

#What artist released the longest song, and what is the name of the song?

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

#What's the average danceability of the top 10 most popular songs?

SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE track_name IN
(SELECT track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10);

#Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
